var searchIndex = {};
searchIndex["abomonation"] = {"doc":"Abomonation (spelling intentional) is a fast serialization / deserialization crate.","items":[[5,"encode","abomonation","Encodes a typed reference into a binary buffer.",null,{"inputs":[{"name":"t"},{"name":"vec"}],"output":null}],[5,"decode","","Decodes a mutable binary slice into an immutable typed reference.",null,null],[8,"Abomonation","","Abomonation provides methods to serialize any heap data the implementor owns.",null,null],[11,"entomb","","Write any additional information about `&self` beyond its binary representation.",0,{"inputs":[{"name":"self"},{"name":"vec"}],"output":null}],[11,"embalm","","Perform any final edits before committing `&mut self`. Importantly, this method should only manipulate the fields of `self`; any owned memory may not be valid.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"exhume","","Recover any information for `&mut self` not evident from its binary representation.",0,null],[14,"unsafe_abomonate","","The `unsafe_abomonate!` macro takes a type name with an optional list of fields, and implements `Abomonation` for the type, following the pattern of the tuple implementations: each method calls the equivalent method on each of its fields.",null,null]],"paths":[[8,"Abomonation"]]};
initSearch(searchIndex);
